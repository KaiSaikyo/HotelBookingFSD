@page "/review/view/{id:int}"
@inject HttpClient _client
@inject NavigationManager _navManager

<PageTitle>RoomScout.Org - View Reviews</PageTitle>

<div class="review-container">
    <div class="review-content">
        <div class="image-review">
            <img src="@review.ImagePath" alt="review pic">
        </div>
        <div class="rating-review">
            <div>
                <h2>Rating - @review.Rating</h2>
			</div>
            <div class="review-description">
                <h2>Description</h2>
                <p>
                    "@review.Description" - @review.Customer.Name, @review.Date.ToString().Split()[0]
                </p>
            </div>
            <div class="review-services">
                <h2>Services</h2>
                <ul id="servicesList">
                    @if (review != null)
                    {
                        @foreach (var service in GetServices())
                        {
                            <li>@service</li>
                        }
                    }
                    else
                    {
                        <li>No services available</li>
                    }
                </ul>
            </div>
        </div>
    </div>
    <div class="button-wrapper">
        <button type="submit" class="middle-aligned-button" @onclick="NavigateBack">
            Back
        </button>
    </div>
</div>

@code {
    [Parameter] public int id { get; set; }
    Review? review = new Review();

    protected async override Task OnParametersSetAsync()
    {
        review = await _client.GetFromJsonAsync<Review>($"{Endpoints.ReviewsEndpoint}/{id}");
    }

    private List<string> GetServices()
    {
        List<string> services = new List<string>();

        if (review != null && !string.IsNullOrWhiteSpace(review.Stay.ComplimentaryServices))
        {
            // Retrieve the services string from data storage
            var servicesString = review.Stay.ComplimentaryServices;

            // Split the string into an array using commas as the delimiter
            var servicesArray = servicesString.Split(",");

            // Trim and add non-empty services to the list
            foreach (var service in servicesArray)
            {
                var trimmedService = service.Trim();
                if (!string.IsNullOrWhiteSpace(trimmedService))
                {
                    services.Add(trimmedService);
                }
            }
        }

        return services;
    }

    private void NavigateBack()
    {
        _navManager.NavigateTo("/review");
    }
}