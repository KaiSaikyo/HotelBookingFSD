@page "/hotel/view/{id:int}"
@inject HttpClient _client
@inject NavigationManager _navManager

<PageTitle>RoomScout.Org - View Hotels</PageTitle>

<div class="image-hotel">
    <img src="@hotel.ImagePath" alt="hotel pic">
</div>

<div class="Hotel-Name">
    <h1>@hotel.Name</h1>
    <p>@hotel.Address</p>
</div>

<div class="Hotel-Info">
    <div class="Hotel-Description">
        <h2>Description</h2>
        <p>@hotel.Description</p>
    </div>
    <div class="Hotel-Amentities">
        <h2>Amenities</h2>
        <ul id="amenitiesList">
            @if (hotel != null)
            {
                @foreach (var amenity in GetAmenities())
                {
                    <li>@amenity</li>
                }
            }
            else
            {
                <li>No amenities available</li>
            }
        </ul>
    </div>
    <br />
    <div class="button-wrapper">
        <button type="submit" class="middle-aligned-button" @onclick="NavigateBack">
            Back
        </button>
    </div>
</div>

@code {
    [Parameter] public int id { get; set; }
    Hotel? hotel = new Hotel();

    protected override async Task OnParametersSetAsync()
    {
        hotel = await _client.GetFromJsonAsync<Hotel>($"{Endpoints.HotelsEndpoint}/{id}");
    }

    private List<string> GetAmenities()
    {
        List<string> amenities = new List<string>();

        if (hotel != null && !string.IsNullOrWhiteSpace(hotel.Amenities))
        {
            // Retrieve the amenities string from data storage
            var amenitiesString = hotel.Amenities;

            // Split the string into an array using commas as the delimiter
            var amenitiesArray = amenitiesString.Split(",");

            // Trim and add non-empty amenities to the list
            foreach (var amenity in amenitiesArray)
            {
                var trimmedAmenity = amenity.Trim();
                if (!string.IsNullOrWhiteSpace(trimmedAmenity))
                {
                    amenities.Add(trimmedAmenity);
                }
            }
        }

        return amenities;
    }

    private void NavigateBack()
    {
        _navManager.NavigateTo("/hotel");
    }

}

