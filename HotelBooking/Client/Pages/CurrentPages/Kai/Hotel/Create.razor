@page "/hotel/create"
@inject HttpClient _client
@inject NavigationManager _navManager

<PageTitle>RoomScout.Org - Create Hotels</PageTitle>

<div class="main-background">
	<div class="form-background">
		<EditForm Model="@hotel" OnValidSubmit="CreateHotel">
			<DataAnnotationsValidator />
			<ValidationSummary />

			<div class="form-group">
				<label>Name: </label>
				<div>
					<InputText @bind-Value="@hotel.Name" class="form-control" />
					<ValidationMessage For="@(() => hotel.Name)" />
				</div>
			</div>
			<br />
			<div class="form-group">
				<label>Address: </label>
				<div>
					<InputTextArea @bind-Value="@hotel.Address" class="form-control" />
					<ValidationMessage For="@(() => hotel.Address)" />
				</div>
			</div>
			<br />
			<div class="form-group">
				<label>Description: </label>
				<div>
					<InputTextArea @bind-Value="@hotel.Description" class="form-control" />
					<ValidationMessage For="@(() => hotel.Description)" />
				</div>
			</div>
			<br />
			<div class="form-group">
				<label>Amenities: </label>
				<div>
					<InputTextArea @bind-Value="@hotel.Amenities" class="form-control" />
					<ValidationMessage For="@(() => hotel.Amenities)" />
				</div>
			</div>
			<br />
			<div class="form-group">
				<label>Rating: </label>
				<div>
					<InputNumber @bind-Value="@hotel.Rating" class="form-control" />
					<ValidationMessage For="@(() => hotel.Rating)" />
				</div>
			</div>
			<br />
			<div class="form-group">
				<label>Availability: </label>
				<div>
					<InputSelect @bind-Value="@hotel.Availability" class="form-control">
						<option value="">-- Select Availability --</option>
						<option value="true">True</option>
						<option value="false">False</option>
					</InputSelect>
					<ValidationMessage For="@(() => hotel.Availability)" />
				</div>
			</div>
			<br />
			<div class="button-wrapper">
				<button type="submit" class="left-aligned-button">
					Create Hotel
				</button>
			</div>
		</EditForm>
	</div>
</div>

@code {
	private Hotel hotel = new Hotel();

	private async Task CreateHotel()
	{
		await _client.PostAsJsonAsync(Endpoints.HotelsEndpoint, hotel);
		_navManager.NavigateTo("/hotel/");
	}
}