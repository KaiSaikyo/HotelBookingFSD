@using HotelBooking.Client.Components
<PageTitle>RoomScout.Org - Update Staffs</PageTitle>

<div class="main-background">
	<div class="form-background">
		<EditForm Model="@staff" OnValidSubmit="@OnValidSubmit">
			<DataAnnotationsValidator />
			<ValidationSummary />

			<fieldset disabled="@Disabled">
				<div class="form-group">
					<label>Name: </label>
					<div>
						<InputText @bind-Value="@staff.Name" class="form-control" />
						<ValidationMessage For="@(() => staff.Name)" />
					</div>
				</div>
				<br />
				<div class="form-group">
					<label>Email: </label>
					<div>
						<InputText @bind-Value="@staff.Email" class="form-control" />
						<ValidationMessage For="@(() => staff.Email)" />
					</div>
				</div>
				<br />
				<div class="form-group">
					<label>Password: </label>
					<div>
						<InputText @bind-Value="@staff.Password" class="form-control" />
						<ValidationMessage For="@(() => staff.Password)" />
					</div>
				</div>
				<br />
				<div class="form-group">
					<label>Mobile: </label>
					<div>
						<InputText @bind-Value="@staff.Mobile" class="form-control" />
						<ValidationMessage For="@(() => staff.Mobile)" />
					</div>
				</div>
			</fieldset>

			@if (!Disabled)
			{
				<br />
				<div class="button-wrapper">
					<button type="submit" class="left-aligned-button">
						@ButtonText
					</button>
				</div>
			}
			<BackToList Target="staff" />
		</EditForm>
	</div>
</div>

@code {
	[Parameter] public Staff? staff { get; set; }
	[Parameter] public string ButtonText { get; set; } = "Save";
	[Parameter] public EventCallback OnValidSubmit { get; set; }
	[Parameter] public bool Disabled { get; set; } = false;
}